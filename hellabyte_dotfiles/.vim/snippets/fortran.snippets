## Preprocessor Stuff
# #include "..."
snippet inc
	#include "${1:header_file}.h"${2}

# definition constructs
snippet Def
	#ifndef $1
	#define ${1:SYMBOL} ${2:value}
	#endif${3}
snippet def
	#define ${1:SYMBOL} ${2:value}

snippet ifdef
	#ifdef ${1:FOO}
		${2:#define }
	#endif

snippet #if
	#if ${1:FOO}
		${2}
	#endif

## Classic Fortran Structures
# program
snippet program
	program ${1:prog_name}
		implicit none
		${2}
		stop
	end program $1

## Declarations
snippet real
	real(${1:08})${2:options} :: ${3:vars} 
snippet int
	integer(${1:04})${2:options} :: ${3:vars}
snippet logic
	logical(1) :: ${1:vars}
snippet char
	character(${1:size}) :: ${2:name}
snippet type
	type ${1:name}
		${2}
	end type $1
## Declaration Options
snippet intent
	,intent(${1:inout})
snippet dim
	,dimension(${1:start}:${2:end})

## Indexes
snippet ind
	${1:start}${2::}${3:end}

## Conditionals
# If then 
snippet ift
	if ( ${1:condition} ) then
		${2:code }
	end if
# Else if then
snippet elif
	else if ( ${1:condition} ) then
		${2:code}
# One Line If
snippet if
	if ( ${1:condition} ) ${2:code }
## Loops
# do
snippet do
	do ${1:iter} = ${2:start}, ${3:end}
		${4:code}
	end do
# forall
snippet for
	forall (${1:iter} = ${2:start}:${3:end}) 
		${4:code}
	end forall
snippet where
	where (${1:condition})
		${2:code}
	end where

## Subs
snippet func
	${1:type} function ${2:name}(${3:inputs}) 
		implicit none
		$3
		${4:code}
		return
	end function $2

snippet sub
	subroutine ${1:name}(${2:inputs})
		implicit none
		$2
		${3:code}
		return
	end subroutine $1

## Input / Output
snippet readbin
	read(${1:filehandle}) ${2:variables}
snippet readtxt
	read(${1:filehandle},${2:fmt}) ${3:variables}
snippet readin
	read ${1:fmt}, ${2:variables}
snippet pr
	print *, ${1:variables}
snippet print
	print ${1:fmt}, ${2:variables}
snippet wr
	write(${1:filehandle},${2:fmt}) ${3:variables}
snippet write
	write(*,${1:fmt}) ${2:variables}
snippet open
	open(${1:fid},file=${2:fstr},status=${3:rw},form=${4:fmt})
	close(${1})

## Common Constants
snippet PI
	#define PI 3.1415926535897932${1:3846264338327950}
	${2}
snippet EULER
	#define EULER 2.7182818284590452${1:35360287471352662}
	${2}

